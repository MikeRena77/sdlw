<?xml version='1.0' encoding='UTF-8'?>
<!-- This is a targets file [Wayne.TeamFoundation.Build.Nucleus.targets] specialized for Nucleus builds and maintained in a folder 
    on the GE Domain build server \\tnwp011355.genpitfi01.og.ge.com under the  server’s \target\build folder on the C:\ drive. This targets
    file is imported by the TFSBuild.proj file immediately after the import statement for the MSBuilds targets file. -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="CanonicalizePaths">
    <!-- These tasks are used by the Team Build process defined in this file -->  
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.GetBuildProperties" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.SetBuildProperties" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.BuildStep" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.Get" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.Label" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.CreateNewWorkItem" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.GenCheckinNotesUpdateWorkItems" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.UpdateBuildNumberDropLocation" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.CreateWorkspaceTask" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.DeleteWorkspaceTask" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="Microsoft.TeamFoundation.Build.Tasks.WorkspaceItemConverterTask" 
            AssemblyFile="$(TeamBuildRefPath)\Microsoft.TeamFoundation.Build.Tasks.VersionControl.dll"/>
    <UsingTask TaskName="TestToolsTask" 
            AssemblyFile="$(MSTestRefPath)\Microsoft.VisualStudio.QualityTools.MSBuildTasks.dll"/>
    <!-- The Skip flags may be set to skip certain targets. -->
    <!-- Additional properties that may be set to customize the build process -->
    <PropertyGroup>
        <!-- Properties have been set for the Nucleus builds to disallow the parallel build of configurations and solutions in order to 
            force project builds to follow the order specified in their respective TFSBuild.proj files. -->
        <!-- Set this property to true to enable building configurations in parallel. -->
        <BuildConfigurationsInParallel Condition=" '$(BuildConfigurationsInParallel)'=='' ">false</BuildConfigurationsInParallel>
        <!-- Set this property to true to enable building solutions in parallel. -->
        <BuildSolutionsInParallel Condition=" '$(BuildSolutionsInParallel)'=='' ">false</BuildSolutionsInParallel>
        <!-- Set this property to false to generate an error when an invalid configuration is encountered. -->
        <SkipInvalidConfigurations Condition=" '$(SkipInvalidConfigurations)'=='' ">true</SkipInvalidConfigurations>
        <!-- This property creates a variable to be overriden by the project file to specify an output folder under the drop location 
            (e.g. GnPs for the GenPOS project builds) -->
        <ProjectFamily Condition=" '$(ProjectFamily)'=='' "/>
    </PropertyGroup>

    <!-- Initialize the build for EndToEndIteration -->  
    <Target Name="InitializeEndToEndIteration">

        <!-- IncrementalGet == true implies CleanCompilationOutputOnly = true, SkipInitializeWorkspace = true, and ForceGet = false -->

        <!-- IncrementalBuild == true implies SkipClean = true, SkipInitializeWorkspace = true, and ForceGet = false -->

        <!-- Update the build number and drop location in the database. This task will also create the drop directory 
         and grant the service account full rights on it. -->   
        <!-- The GE Domain build server is currently a Microsoft 2003 Server.  Its original configuration used Internet Explorer 6. 
            Internet Explorer has been upgraded to 8.0.6001.18702. On first-time use by a user new to the build server, launching Internet 
            Explorer modifies the registry and breaks builds that rely upon ieframe.dll like sections of the WayneTSHelpBrowser. (the registry 
            reference to the ieframe.dll is revised by first launch to become "ieframe.dll\1" rather than a straight ieframe.dll reference. -->
        <!-- To automate registry correction, a batch job is run in the “InitializeEndToEndIteration” target which applies the correction for 
            the registry for ieframe.dll. -->
        <!-- Another problem developed with directory permissions for the TFS Svc-account so that a correction was added to the batch job to run 
            the icacls command to correct user permissions for the svc-account  on the drop location (using the $(ProjectFamily) variable)  -->

        <PropertyGroup>
            <REGCORRECT>&quot;\\genpitfi01.og.ge.com\Wayne_aus1\groups\Software_Development\WDSWDEVL\ntnuc\cm\regcorrect.reg&quot;</REGCORRECT>
            <REGIMP>&quot;\\genpitfi01.og.ge.com\Wayne_aus1\groups\Software_Development\WDSWDEVL\ntnuc\cm\regimport.bat&quot;</REGIMP>
        </PropertyGroup>
        <Exec Command="$(REGIMP) $(REGCORRECT) $(ProjectFamily)" />

        <UpdateBuildNumberDropLocation 
                TeamFoundationServerUrl="$(TeamFoundationServerUrl)" 
                BuildUri="$(BuildUri)" 
                BuildNumber="$(BuildNumber)" 
                DropLocation="$(DropLocation)\$(BuildNumber)"/>
        <!-- A modification was made in assigning the LabelName so that the $(RN_BASE) and $(RN_APPL) variables are used to construct the LabelName 
            applied upon getting the source; in the event the variables are not passed in for the build, the build reverts to a LabelName in the 
            form of $(BuildNumber) -->
        <PropertyGroup>
            <LabelName Condition=" '$(RN_BASE)'=='' ">$(BuildNumber)</LabelName>
            <LabelName Condition=" '$(RN_BASE)'!='' ">$(RN_BASE)_$(RN_APPL)</LabelName>
        </PropertyGroup>
    </Target>
    <!-- This is the end of the “InitializeEndToEndIteration” target-->
    <!-- Override this target to execute custom tasks before workspace initialization -->  
    <!-- Due to the lack of space on the drop location (E:\ is only a 19.9 Gb drive and routinely runs at 1.3 Gb available space), this section 
        was added to the target to clean the drop location of previous builds before attempting a new build -->
    <Target Name="BeforeInitializeWorkspace">
        <RemoveDir Condition="Exists('$(DropLocation)')" 
                Directories="$(DropLocation)\"/>
        <MakeDir Condition="!Exists('$(DropLocation)\$(BuildNumber)')" 
                Directories="$(DropLocation)\$(BuildNumber)\"/>
    </Target>
    <!-- Compute the list of all Platform / Configuration combinations -->
    <!-- This is another modification corresponding to the False value for the parallel builds of configurations and solutions to ensure the build 
        order specified in the TFSBuild.proj file is followed -->
    <Target Name="ComputeConfigurationList">
        <ItemGroup>
            <!-- ConfigurationList for all Platforms -->
            <ConfigurationList Include="$(MSBuildProjectFile)">
                <Properties>Configuration=%(ConfigurationToBuild.FlavorToBuild);Platform=%(ConfigurationToBuild.PlatformToBuild);TeamBuildOutDir=$(BinariesRoot)\%(ConfigurationToBuild.PlatformToBuild)\%(ConfigurationToBuild.FlavorToBuild)\;TeamBuildPublishDir=$(BinariesRoot)\%(ConfigurationToBuild.PlatformToBuild)\%(ConfigurationToBuild.FlavorToBuild)\</Properties>
            </ConfigurationList>
        </ItemGroup>
    </Target>
</Project>
