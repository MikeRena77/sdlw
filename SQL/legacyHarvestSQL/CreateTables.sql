/* 
 * CreateTables.sql
 * 
 * Create tables without foreign keys
 */
--
-- Copyright (c) 2002 Computer Associates inc. All rights reserved. 
--

WHENEVER SQLERROR EXIT FAILURE

DEFINE HARVESTINDEXTSNAME = &1
--
CREATE TABLE harAllChildrenPath 
(ITEMOBJID NUMBER NOT NULL, CHILDITEMID NUMBER NOT NULL,  
CONSTRAINT harAllChildrenPath_PK PRIMARY KEY  (ITEMOBJID, CHILDITEMID)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harAllUsers (
       USROBJID             NUMBER NOT NULL,
       USERNAME             CHAR(32) NOT NULL,
       LOGINDATE            DATE,
       LASTLOGIN            DATE,
       LOGGEDIN             CHAR(1) NOT NULL,
       REALNAME             CHAR(128),
       PHONENUMBER          CHAR(32),
       EXTENSION            CHAR(8),
       FAXNUMBER            CHAR(32),
       ENCRYPTPSSWD         CHAR(32),
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       EMAIL                VARCHAR2(128),
       NOTE                 VARCHAR2(2000),
CONSTRAINT HARALLUSERS_PK PRIMARY KEY (USROBJID)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harCheckinProc (
    PROCESSOBJID NUMBER NOT NULL, 
    PROCESSNAME CHAR(128) NOT NULL, 
    STATEOBJID NUMBER NOT NULL, 
    ITEMOPTION NUMBER NOT NULL, 
    PATHOPTION NUMBER NOT NULL, 
    ITEMNEWER CHAR(1) NOT NULL, 
    MODEOPTION NUMBER NOT NULL, 
    CREATIONTIME DATE NOT NULL, 
    CREATORID NUMBER NOT NULL, 
    MODIFIEDTIME DATE NOT NULL, 
    MODIFIERID NUMBER NOT NULL, 
    VIEWPATH VARCHAR2(255) NULL, 
    CLIENTDIR VARCHAR2(255) NULL, 
    DESCRIPTION VARCHAR2(2000) NULL, 
    NOTE VARCHAR2(2000) NULL, 
    NEWOREXISTINGITEM CHAR(1) NOT NULL, 
    NEWITEMONLY CHAR(1) NOT NULL, 
    EXISTINGITEMONLY CHAR(1) NOT NULL, 
    DELETEAFTERCI CHAR(1) NOT NULL, 
    OWNERONLY CHAR(1) NOT NULL,  
CONSTRAINT harCheckinProc_PK PRIMARY KEY (PROCESSOBJID)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harEnvironment (
       ENVOBJID             NUMBER NOT NULL,
       ENVIRONMENTNAME      CHAR(128) NOT NULL,
       ENVISACTIVE          CHAR(1) NOT NULL,
       BASELINEVIEWID       NUMBER DEFAULT 0 NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       NOTE                 VARCHAR2(2000),
       isArchive      CHAR(1) DEFAULT 'N' NOT NULL,
        archiveBy      INTEGER DEFAULT 1 NOT NULL,
        archivemachine CHAR(256),
        archivefile    CHAR(256),
        archivetime    DATE, 
 CONSTRAINT harEnvironment_pk PRIMARY KEY (ENVOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harExternAssoc
(
     PACKAGEOBJID    NUMBER NOT NULL,
     USROBJID        NUMBER NOT NULL,
     EXTERNALID      NUMBER NOT NULL,
     RESTRICT        NUMBER NOT NULL,
CONSTRAINT harExternAssoc_PK PRIMARY KEY (EXTERNALID, USROBJID, PACKAGEOBJID) 
     USING INDEX TABLESPACE &HARVESTINDEXTSNAME
);

CREATE TABLE harForm (
   FORMOBJID NUMBER NOT NULL, 
   FORMTYPEOBJID NUMBER NOT NULL, 
   FORMNAME VARCHAR2(128) NOT NULL, 
   CREATIONTIME         DATE NOT NULL,
   CREATORID            NUMBER NOT NULL,
   MODIFIEDTIME         DATE NOT NULL,
   MODIFIERID           NUMBER NOT NULL,
CONSTRAINT harForm_PK PRIMARY KEY(FORMOBJID)
   USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harHarvest (
    USRGRPOBJID NUMBER NOT NULL, 
    SECUREHARVEST CHAR(1) DEFAULT 'N' NOT NULL, 
    ADMINUSER CHAR(1) DEFAULT 'N' NOT NULL, 
    VIEWUSER CHAR(1) DEFAULT 'N' NOT NULL, 
    ADMINENVIRONMENT CHAR(1) DEFAULT 'N' NOT NULL, 
    VIEWENVIRONMENT CHAR(1) DEFAULT 'N' NOT NULL, 
    ADMINREPOSITORY CHAR(1) DEFAULT 'N' NOT NULL, 
    VIEWREPOSITORY CHAR(1) DEFAULT 'N' NOT NULL, 
    ADMINFORMTYPE CHAR(1) DEFAULT 'N' NOT NULL, 
    VIEWFORMTYPE CHAR(1) DEFAULT 'N' NOT NULL,  
CONSTRAINT harHarvest_PK PRIMARY KEY (USRGRPOBJID)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harItems (
       ITEMOBJID            NUMBER NOT NULL,
       ITEMNAME             VARCHAR2(256) NOT NULL,
       ITEMTYPE             NUMBER NOT NULL,
       PARENTOBJID          NUMBER NOT NULL,
       REPOSITOBJID         NUMBER NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
CONSTRAINT harItems_pk PRIMARY KEY(ITEMOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harObjectSequenceId (
       HARTABLENAME         VARCHAR2(64) NOT NULL,
       HARSEQUENCEID        VARCHAR2(64) NOT NULL,
CONSTRAINT harObjectSequenceId_PK PRIMARY KEY (HARTABLENAME) 
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harPackageGroup (
       PKGGRPOBJID          NUMBER NOT NULL,
       PKGGRPNAME           CHAR(128) NOT NULL,
       ENVOBJID             NUMBER NOT NULL,
       BIND                 CHAR(1) DEFAULT 'N' NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       NOTE                 VARCHAR2(2000), 
CONSTRAINT harPackageGroup_PK PRIMARY KEY (PKGGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);
--
-- Add new table to track how many times a package name format was used to 
-- create a package in a project.
CREATE TABLE harPackageNameGen ( 
    NAMEFORMAT VARCHAR2(128) NOT NULL, 
    NAMECOUNTER NUMBER NOT NULL,  
CONSTRAINT harPackageNameGen_PK PRIMARY KEY ( NAMEFORMAT)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harRepository (
       REPOSITOBJID         NUMBER NOT NULL,
       REPOSITNAME          CHAR(128) NOT NULL,
       ROOTPATHID           NUMBER NOT NULL,
       REPONLINE            CHAR(8),
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       INITIALVIEWID        NUMBER NOT NULL,
       HOSTNODE             VARCHAR2(32),
       HOSTINSTANCE         VARCHAR2(32) NOT NULL,
       NOTE                 VARCHAR2(2000),
       EXTENSIONOPTION      NUMBER DEFAULT 1 NOT NULL,
       COMPFILE CHAR(1) DEFAULT 'Y' NOT NULL,
       NOTCOMPEXT VARCHAR2(1000) DEFAULT 
	   'zip,jpg,gif,asf,ram,mp3,wav,cab' NULL,
       MVSMAPPING CHAR(1) DEFAULT 'D' NOT NULL,
CONSTRAINT harRepository_PK PRIMARY KEY (REPOSITOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harStateProcess (
       STATEOBJID           NUMBER NOT NULL,
       PROCESSOBJID         NUMBER NOT NULL,
       PROCESSNAME          CHAR(128) NOT NULL,
       PROCESSTYPE          CHAR(32) NOT NULL,
       PROCESSORDER         NUMBER NOT NULL,
       POSTCOUNT            NUMBER DEFAULT 0 NOT NULL,
       PRECOUNT             NUMBER DEFAULT 0 NOT NULL,
CONSTRAINT harStateProcess_pk PRIMARY KEY (STATEOBJID, PROCESSOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harUser (
       USROBJID             NUMBER NOT NULL,
       USERNAME             CHAR(32) NOT NULL,
       LOGINDATE            DATE,
       LASTLOGIN            DATE,
       LOGGEDIN             CHAR(1) NOT NULL,
       REALNAME             CHAR(128),
       PHONENUMBER          CHAR(32),
       EXTENSION            CHAR(8),
       FAXNUMBER            CHAR(32),
       ENCRYPTPSSWD         CHAR(32),
       PASSWDATTRS          NUMBER DEFAULT 0 NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       EMAIL                VARCHAR2(128),
       NOTE                 VARCHAR2(2000),
CONSTRAINT harUser_pk PRIMARY KEY (USROBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harVersionInView (
       VIEWOBJID            NUMBER NOT NULL,
       VERSIONOBJID         NUMBER NOT NULL,
CONSTRAINT harVersionInView_PK PRIMARY KEY (VIEWOBJID, VERSIONOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harVersions (
       VERSIONOBJID         NUMBER NOT NULL,
       ITEMOBJID            NUMBER NOT NULL,
       PACKAGEOBJID         NUMBER NOT NULL,
       PARENTVERSIONID      NUMBER NOT NULL,
       MERGEDVERSIONID      NUMBER NOT NULL,
       INBRANCH             NUMBER NOT NULL,
       MAPPEDVERSION        CHAR(16),
       VERSIONSTATUS        CHAR(1),
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       DESCRIPTION          VARCHAR2(2000),
       VERSIONDATAOBJID     NUMBER NOT NULL,
      CLIENTMACHINE     VARCHAR2(50) NULL, 
      CLIENTPATH        VARCHAR2(1024) NULL,
      ANCESTORVERSIONID NUMBER DEFAULT 0 NOT NULL,
CONSTRAINT harVersions_PK PRIMARY KEY (VERSIONOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harView (
       VIEWOBJID            NUMBER NOT NULL,
       VIEWNAME             CHAR(128) NOT NULL,
       VIEWTYPE             CHAR(16) NOT NULL,
       ENVOBJID             NUMBER NOT NULL,
       CANVIEWEXTERNALLY    CHAR(1) NOT NULL,
       BASELINEVIEWID       NUMBER NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       SNAPSHOTTIME         DATE,
       NOTE                 VARCHAR2(2000), 
CONSTRAINT harView_PK PRIMARY KEY (VIEWOBJID)
        USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harBranch (
       BRANCHOBJID          NUMBER NOT NULL,
       PACKAGEOBJID         NUMBER NOT NULL,
       ITEMOBJID            NUMBER NOT NULL,
       ISMERGED             NUMBER NOT NULL, 
CONSTRAINT harBranch_PK PRIMARY KEY (BRANCHOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harEnvironmentAccess (
       ENVOBJID             NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       SECUREACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       UPDATEACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       VIEWACCESS           CHAR(1) DEFAULT 'N' NOT NULL,
       EXECUTEACCESS        CHAR(1) DEFAULT 'N' NOT NULL,
CONSTRAINT harEnvAccess_pk PRIMARY KEY (ENVOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harFormTypeAccess (
       FORMTYPEOBJID        NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       SECUREACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       UPDATEACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       VIEWACCESS           CHAR(1) DEFAULT 'N' NOT NULL,
CONSTRAINT harFormTypeAccess_pk PRIMARY KEY (FORMTYPEOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harItemAccess (
       ITEMOBJID            NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       VIEWACCESS           CHAR(1) DEFAULT 'Y' NOT NULL,
CONSTRAINT harItemAccess_pk PRIMARY KEY (ITEMOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harItemRelationship (
       ITEMOBJID            NUMBER NOT NULL, 
       REFITEMID            NUMBER NOT NULL,
       RELATIONSHIP         CHAR(10) NOT NULL,
       VERSIONOBJID         NUMBER NOT NULL,
CONSTRAINT harItemRelationship_pk PRIMARY KEY (ITEMOBJID,REFITEMID,VERSIONOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

-- Not used
-- CREATE TABLE harPackageMovement (
--       PACKAGEOBJID         NUMBER NOT NULL,
--       STATEOBJID           NUMBER NOT NULL,
--       FROMSTATEID          NUMBER NOT NULL,
-- CONSTRAINT harPackageMovement_PK PRIMARY KEY (PACKAGEOBJID, STATEOBJID, 
-- FROMSTATEID) USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harPathFullName
(
 ITEMOBJID     NUMBER NOT NULL,
 PATHFULLNAME  VARCHAR2(1024) NULL,
 CONSTRAINT harPathFullName_PK PRIMARY KEY (ITEMOBJID)
    USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harRenameItemProc (
       PROCESSOBJID         NUMBER NOT NULL,
       PROCESSNAME          CHAR(128) NOT NULL,
       STATEOBJID           NUMBER NOT NULL,
       CREATIONTIME         DATE NOT NULL,
       CREATORID            NUMBER NOT NULL,
       MODIFIEDTIME         DATE NOT NULL,
       MODIFIERID           NUMBER NOT NULL,
       NOTE                 VARCHAR2(2000),
CONSTRAINT harRenameItemProc_PK PRIMARY KEY (PROCESSOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harRepInView (
       VIEWOBJID            NUMBER NOT NULL,
       REPOSITOBJID         NUMBER NOT NULL,
       READONLY             NUMBER NOT NULL,
       REPFROMVIEWID        NUMBER NOT NULL,
CONSTRAINT harRepInView_PK PRIMARY KEY (VIEWOBJID, REPOSITOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harRepositoryAccess (
       REPOSITOBJID         NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       SECUREACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       UPDATEACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       VIEWACCESS           CHAR(1) DEFAULT 'N' NOT NULL,
CONSTRAINT harRepAccess_pk PRIMARY KEY (REPOSITOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harStateAccess (
       STATEOBJID           NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       UPDATEACCESS         CHAR(1) DEFAULT 'N' NOT NULL,
       UPDATEPKGACCESS      CHAR(1) DEFAULT 'N' NOT NULL,
CONSTRAINT harStateAccess_pk PRIMARY KEY (STATEOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);

CREATE TABLE harStateProcessAccess (
       STATEOBJID           NUMBER NOT NULL,
       PROCESSOBJID         NUMBER NOT NULL,
       USRGRPOBJID          NUMBER NOT NULL,
       EXECUTEACCESS        CHAR(1) DEFAULT 'N' NOT NULL,
CONSTRAINT harStateProcessAccess_pk            
       PRIMARY KEY (STATEOBJID, PROCESSOBJID, USRGRPOBJID)
       USING INDEX TABLESPACE &HARVESTINDEXTSNAME);
--
-- new table, no longer used
--
-- CREATE TABLE harVersionPackageDependency (
--       VERSIONOBJID         NUMBER NOT NULL,
--       PACKAGEOBJID         NUMBER NOT NULL,
--       DEPENDENTPACKAGEID   NUMBER NOT NULL);
--













       
