#####################################################
##      Do not change the content of the file.     ##
##      It will not import correctly.              ##
#####################################################
[PROJECT]

bCopyAccess=1
=27
Name=Third Party Tool Model
Template=1
Active=0
=902
Note=The Third-Party Tool Model is used by organizations that want to track their third-party code and its associations with their projects. There are three basic states in this model:  Review Code, Test, and Export Changes. 

The flow through the life cycle starts when the third-party code is captured in CCC/Harvest in the Receive Code state. It is then promoted to the Testing area, where you have an opportunity to test how the third-party code is going to affect your code before you start using it. When it is verified that the third-party tool will be used, it is moved to the Export Changes state, a snapshot is created of the release, and that snapshot is used as a read-only repository in the Master Views of the project life cycles that use the third-party code.

When a new version of the tool is released, the changes are checked into the Received Code area, and the process is repeated.

CreateUserGroup=0

[SecureAccess]
AccessMethod=SecureAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[UpdateAccess]
AccessMethod=UpdateAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[ViewAccess]
AccessMethod=ViewAccess
size=0

[WORKINGVIEW]

size=4
NameView=Code
=5
Note=
NameView=Test
=5
Note=
NameView=Export
=5
Note=

[STATES]

size=3
Name=Receive Code
=1198
Note=This state is where the code is checked into CCC/Harvest.  When code is received for the first time, duplicate the Third-Party Archiving Environment and rename the duplicated environment to the product name.  Then create a repository for the third-party code and load it with the first release of the product.  Next, go into the environment you created and associate the repository with this environment. 

When the next release of the software needs to be captured, create a package in the Receive Code state and reserve all the files in the repository.  Then check in all the files from the new version using the package you created.  Only items that have been changed are updated, and all checked-in items are released.  Items not included in the new version will be left reserved in CCC/Harvest; these items should be removed from the view. 

Once the view contains the current third-party versions, promote this package to the test state.  This state was designed to give you a place t to test the new version of the code against all environments that use the product.  If the tests are successful and you want to incorporate the changes, promote the package to the Export Changes state.

PMStatusName=None_Defined
Snapshot=0
StateOrder=1
XLocation=0
YLocation=221
NameView=Code

[UpdateAccess]
AccessMethod=UpdateAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[UpdatePkgAccess]
AccessMethod=UpdatePkgAccess
size=2
nameUserGroup=Dev Manager
=5
Note=
nameUserGroup=Public
=5
Note=

Name=Test
=339
Note=This state is in the Test view and is isolated from the Receive Code state.  This state is where tests can be run to verify that the new version of the tool will work with the products that use the tool.  If the new version will be used, it will move from this state to the Export Changes state; otherwise, it will stay in this state.
PMStatusName=None_Defined
Snapshot=0
StateOrder=2
XLocation=236
YLocation=221
NameView=Test

[UpdateAccess]
AccessMethod=UpdateAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[UpdatePkgAccess]
AccessMethod=UpdatePkgAccess
size=2
nameUserGroup=Dev Manager
=5
Note=
nameUserGroup=Public
=5
Note=

Name=Export Changes
=211
Note=This state is the final resting place for all versions of the third-party tool that has been accepted.  A snapshot of this view is then used as a baseline for all products that use this version of the tool.
PMStatusName=None_Defined
Snapshot=0
StateOrder=3
XLocation=511
YLocation=221
NameView=Export

[UpdateAccess]
AccessMethod=UpdateAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

[UpdatePkgAccess]
AccessMethod=UpdatePkgAccess
size=2
nameUserGroup=Dev Manager
=5
Note=
nameUserGroup=Public
=5
Note=


[PROCESS]

STATESIZE=3
STATENAME=Receive Code
size=8
iProcessType=201
Name=Check In Items
=1209
Note=
This process is used to check in new or modified files to the repository.  
You must have reserved an existing item before you can check it back in.  Only the CM Administrator can execute this process.  You must specify the package these changes are associated with.  When the file is checked in, the reserve tag is removed, the new revision of the item is placed in the repository,  the file properties are changed to read-only, and the signature file in the directory from which the file is checked in is updated.

To select items for check in, invoke the Multi-File Chooser from the check in window.  With the Recursive option enabled, move to the top of the directory structure which contains the new third-party code and click Filter.  This selects all files in the current directory structure.  

During check in, CCC/Harvest compares the items in the repository to the files being checked in.  If a file does not currently exist in the repository, it will be created as a new item.  If the file already exists in the repository, the reserve tag is removed and a new version is created.  If no changes exist between the reserved version and the checked-in file, the reserve tag is simply removed.

ProcessOrder=4
CheckinMode=0
DeleteAfterCI=0
=11
Description=
ExistingOnly=1
ItemNewer=0
NewOnly=1
NewOrExisting=1
OwnerOnly=0
ItemOption=0
PathOption=1
ClientDir=/
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=CM Administrator
=5
Note=

iProcessType=202
Name=Check Out for Browse
=375
Note=This process is used to check out a items for read-only.  Anyone can invoke the process.  You can choose to check items out for Browse, which will check out a read-only copy of every item you specify in the version list, or you can check out items for Synchronize, which will only check out items for read-only that have changed since the last time you checked them out.
ProcessOrder=3
BrowseMode=1
CheckoutMode=-1
ConcUpdateMode=0
ItemNewer=0
PathOption=2
ReplaceFile=1
ReserveMode=0
ShareWorkDir=0
SyncMode=1
UpdateMode=0
UseCITimeStamp=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=202
Name=Check Out for Update
=732
Note=This process is used to reserve all of the items in the repository so that new changes can be checked in.  You must specify a package that the changes will be associated with.  When the item is checked out, a reserve tag is placed on the item so that no other user can make modifications to this item.  Only the CM Administrator can invoke this process.

To select all items for check out, invoke the Version Chooser from the check out window.  With the Recursive option enabled, set the Item filter to All, the Version filter to Latest in View, and click the Filter button.  This will return the latest version of all items in the Code view.  If the repository contains a large number of items, this query may take some time.

ProcessOrder=2
BrowseMode=0
CheckoutMode=-1
ConcUpdateMode=0
ItemNewer=0
PathOption=2
ReplaceFile=1
ReserveMode=1
ShareWorkDir=0
SyncMode=0
UpdateMode=0
UseCITimeStamp=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=CM Administrator
=5
Note=

iProcessType=211
Name=Create Package
=134
Note=This process is used to create a work package to track the new changes to the third-party tool.  Anyone can execute this process.
ProcessOrder=1
CreateAssociatedForm=0
DefaultName=
FormTypeObjId=5
StateName=Receive Code
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=203
Name=Delete Versions
=230
Note=This process is used to delete a version from the repository.  The process can only be invoked by the CM Administrator  and the Development Manager.  Once a version has been removed from the repository it cannot be recovered.
ProcessOrder=7
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=CM Administrator
=5
Note=

iProcessType=206
Name=List Versions
=145
Note=This process is used to get a Unix-type difference report between two versions of a repository file.  This process can be invoked by anyone.
ProcessOrder=6
ShowActualChangesFlag=0
ShowDescriptionFlag=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=213
Name=Promote to Test
=296
Note=This process is used to promote packages that are ready for test to the Test state.  To select packages for promotion, select the packages on the Workbench before invoking this process, or use the Package Chooser within the process window.  Only to CM Administrator can perform this process.
ProcessOrder=5
CheckPackageGroupBind=0
CheckPackageDependencies=0
MergedPkgsOnly=0
FromState=Receive Code
ToState=Test
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=CM Administrator
=5
Note=

iProcessType=214
Name=Remove Items
=1160
Note=This process is used to remove an item from the view.  This means that the item is marked with a remove tag, so when the Version Chooser options Latest in View or  All in View are used, the item is no longer seen.  This has the same effect as removing the item from the repository, but the item retains its history and can be later restored by deleting the remove-tagged version.  Only the Development Manager and CM Administrator have access to invoke this process.

After checking in new versions of the third-party code, this process should be used to removed all items that is not part of the new version of the third-party tool.  To get a list of the out-of-date items, invoke the Version Chooser, set the Tag filter to Reserved, and click Filter.  Any item that is still reserved after check in is out-of-date and should be removed.  To save this version list to assist in the removal of items, click List in the Version Chooser to send the list to the Session Log.

Before removing items, the reserve tag must be removed for each reserved item.  Use the Release Only mode of check in to release reserved items before using the Remove Item process.

ProcessOrder=8
=12
Description=
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=2
nameUserGroup=CM Administrator
=5
Note=
nameUserGroup=Dev Manager
=5
Note=

STATENAME=Test
size=3
iProcessType=202
Name=Check Out for Browse
=375
Note=This process is used to check out a items for read-only.  Anyone can invoke the process.  You can choose to check items out for Browse, which will check out a read-only copy of every item you specify in the version list, or you can check out items for Synchronize, which will only check out items for read-only that have changed since the last time you checked them out.
ProcessOrder=1
BrowseMode=1
CheckoutMode=-1
ConcUpdateMode=0
ItemNewer=0
PathOption=2
ReplaceFile=1
ReserveMode=0
ShareWorkDir=0
SyncMode=1
UpdateMode=0
UseCITimeStamp=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=206
Name=List Versions
=145
Note=This process is used to get a Unix-type difference report between two versions of a repository file.  This process can be invoked by anyone.
ProcessOrder=3
ShowActualChangesFlag=0
ShowDescriptionFlag=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=213
Name=Promote to Export Changes
=327
Note=This process is used to promote packages from the Test state to the Export Changes state after testing is complete.  To select packages for promotion, select the packages on the Workbench before invoking this process, or use the Package Chooser within the process window.  Only the CM Administrator can invoke the process.
ProcessOrder=2
CheckPackageGroupBind=0
CheckPackageDependencies=0
MergedPkgsOnly=0
FromState=Test
ToState=Export Changes
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=CM Administrator
=5
Note=

STATENAME=Export Changes
size=2
iProcessType=202
Name=Check Out for Browse
=375
Note=This process is used to check out a items for read-only.  Anyone can invoke the process.  You can choose to check items out for Browse, which will check out a read-only copy of every item you specify in the version list, or you can check out items for Synchronize, which will only check out items for read-only that have changed since the last time you checked them out.
ProcessOrder=1
BrowseMode=1
CheckoutMode=-1
ConcUpdateMode=0
ItemNewer=0
PathOption=2
ReplaceFile=1
ReserveMode=0
ShareWorkDir=0
SyncMode=1
UpdateMode=0
UseCITimeStamp=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Public
=5
Note=

iProcessType=215
Name=Take Snapshot
=5
Note=
ProcessOrder=2
CanViewExternallyFlag=0
CancelFlag=0


[PRELINK]
size=0


[POSTLINK]
size=0


[ExecuteAccess]
AccessMethod=ExecuteAccess
size=1
nameUserGroup=Dev Manager
=5
Note=

