WHENEVER SQLERROR CONTINUE
SPOOL &2
SET FEEDBACK ON
SET TIMING OFF
SET VERIFY OFF

REM ***
REM *** Create Tables for CMEW user
REM ***

CREATE TABLE &1 .COUNTER (ID NUMBER(38) NOT NULL,USERID NUMBER(38) NOT NULL,ECCM_USERID NUMBER(38) NOT NULL,ECCM_CONFIGURATIONID NUMBER(38) NOT NULL,EP_ID NUMBER(38) NOT NULL,EWDB_ID NUMBER (38) NOT NULL,DATETIME_UPDATED DATE  NOT NULL);
CREATE TABLE &1 .ECCM_CONFIGURATION(ECCM_CONFIGURATIONID NUMBER(38) NOT NULL,PROVIDER_NAME VARCHAR2(20) NOT NULL,PRODUCT_CODE NUMBER(38)NOT NULL,PROVIDER_NUMBER NUMBER(38) NOT NULL,DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .ECCM_USER(ECCMUSERID NUMBER(38) NOT NULL,USERID NUMBER(38) NOT NULL,ECCM_CONFIGURATIONID NUMBER(38) NOT NULL,DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .ENTERPRISE_PACKAGE(EP_ID NUMBER(38) NOT NULL,EP_NAME VARCHAR2(40) NOT NULL,ECCM_CONFIGURATIONID NUMBER(38) NOT NULL,SUBMITTING_ECCMUSERID NUMBER(38) NOT NULL,EP_LASTACTION NUMBER(38) NOT NULL,EP_EXECUTIONSTATE NUMBER(38)NOT NULL,EP_EXECUTIONSTATUS NUMBER(38) NOT NULL,COMMENTS VARCHAR2(80),EP_EXECUTIONWINDOWBEGIN DATE NOT NULL,EP_EXECUTIONWINDOWEND DATE NOT NULL,EP_EXECUTIONSTART DATE NOT NULL,EP_EXECUTIONFINISH DATE NOT NULL,DATETIME_UPDATED DATE NOT NULL,CHRONO1 NUMBER(38) NOT NULL,CHRONO2 NUMBER(38) NOT NULL);
CREATE TABLE &1 .ENTERPRISE_PACKAGE_STATUS ( EP_ID NUMBER(38) NOT NULL, ECCM_CONFIGURATIONID NUMBER(38) NOT NULL, EP_PKGSTATUS NUMBER(38) NOT NULL );
CREATE TABLE &1 .ENTERPRISE_PACKAGE_HISTORY (EP_ID NUMBER(38) NOT NULL,CHRONO1 NUMBER(38) NOT NULL,CHRONO2 NUMBER(38) NOT NULL,ACTION_DATETIME DATE NOT NULL,ACTION NUMBER(38) NOT NULL,ENTERPRISE_PACKAGE_NAME VARCHAR2(40),PRODUCT_NAME VARCHAR2(60),PROVIDER_NAME VARCHAR2(20),USERNAMES VARCHAR2(40) NOT NULL,PRODUCT_PACKAGE_NAME VARCHAR2(128), ECCM_CONFIGURATIONID NUMBER(38));
CREATE TABLE &1 .ECCM_LOG (KEY1 NUMBER(38) NOT NULL,KEY2 NUMBER(38) NOT NULL,CHRONO1 NUMBER(38) NOT NULL,CHRONO2 NUMBER(38) NOT NULL, LOG_TYPE NUMBER NOT NULL, SEQ NUMBER NOT NULL,LOG_DATETIME DATE NOT NULL,SEVERITY_LEVEL NUMBER(38) NOT NULL,LOG_TEXT RAW(133),ACTIONLOG_URL VARCHAR2(100) );
CREATE TABLE &1 .ECCM_ACTIONLOG (KEY1 NUMBER(38) NOT NULL,KEY2 NUMBER(38) NOT NULL,CHRONO1 NUMBER(38) NOT NULL,CHRONO2 NUMBER(38) NOT NULL, LOG_TYPE NUMBER NOT NULL, SEQ NUMBER NOT NULL, LOG_TEXT RAW(1900) );
CREATE TABLE &1 .ENTERPRISE_PACKAGE_SUBPACKAGE (SP_ID NUMBER(38) NOT NULL,EP_ID NUMBER(38) NOT NULL,PRODUCT_CODE NUMBER(38) NOT NULL,PROVIDER_NAME VARCHAR2(20),PRODUCT_PACKAGEID NUMBER(38) NOT NULL,PRODUCT_PACKAGE_NAME VARCHAR2(128),SP_PRIORITY NUMBER(38) NOT NULL,SP_LASTACTION NUMBER(38) NOT NULL,SP_EXECUTIONSTATE  NUMBER(38) NOT NULL,SP_EXECUTIONSTATUS NUMBER(38) NOT NULL,COMMENTS VARCHAR2(80),SP_EXECUTIONSTART DATE NOT NULL,SP_EXECUTIONFINISH DATE NOT NULL,DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .HARVEST_SUBPACKAGE_ACTIONS (SP_ID NUMBER(38) NOT NULL,EP_ID NUMBER(38) NOT NULL,HARVEST_STATE NUMBER(38) NOT NULL,PROMOTE_PROCESSID NUMBER(38) NOT NULL,PROMOTE_PROCESSNAME VARCHAR2(60),DEMOTE_PROCESSID NUMBER(38) NOT NULL,DEMOTE_PROCESSNAME VARCHAR2(60),DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .WORKBENCH_PRODUCT (PRODUCT_CODE NUMBER(38) NOT NULL,PRODUCT_NAME VARCHAR2(60) NOT NULL);
CREATE TABLE &1 .WORKBENCH_PROVIDER (PROVIDER_NAME VARCHAR2(20) NOT NULL,PRODUCT_CODE NUMBER(38) NOT NULL,DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .PROVIDER_USER (USERID NUMBER(38) NOT NULL,PROVIDER_NAME VARCHAR2(20) NOT NULL,PRODUCT_CODE NUMBER(38) NOT NULL,USERNAME VARCHAR2(40) NOT NULL,PASSWORD VARCHAR2(64),DATETIME_UPDATED DATE NOT NULL, PROVIDER_NUMBER NUMBER(38) NOT NULL); 
CREATE TABLE &1 .SETTINGS (ECCMUSERID NUMBER(38) NOT NULL,CONTEXT VARCHAR2(20) NOT NULL,VALUE VARCHAR2(2000),DATETIME_UPDATED DATE NOT NULL);
CREATE TABLE &1 .USER_PREFERENCES (PREFERENCE_USERID NUMBER(38) NOT NULL,PREFERENCE_TYPE NUMBER(38) NOT NULL,PRODUCT_CODE NUMBER(38) NOT NULL,PREFERENCE_VALUE VARCHAR2(60) NOT NULL,DATETIME_UPDATED DATE NOT NULL);

REM ***
REM *** Alter Table Statements to add Primary Keys
REM ***
ALTER TABLE &1 .COUNTER ADD CONSTRAINT PK_COUNTER PRIMARY KEY (ID);
ALTER TABLE &1 .ECCM_CONFIGURATION ADD CONSTRAINT PK_ECCM_CONFIGURATION PRIMARY KEY (ECCM_CONFIGURATIONID, PROVIDER_NAME, PRODUCT_CODE);
ALTER TABLE &1 .ECCM_USER ADD CONSTRAINT PK_ECCM_USER PRIMARY KEY (ECCMUSERID, USERID);
ALTER TABLE &1 .ENTERPRISE_PACKAGE ADD CONSTRAINT PK_ENTERPRISE_PACKAGE PRIMARY KEY (EP_ID);  
ALTER TABLE &1 .ENTERPRISE_PACKAGE ADD EP_EXEC_NOTIFICATION NUMBER(38) DEFAULT 0;  
ALTER TABLE &1 .ENTERPRISE_PACKAGE_STATUS ADD CONSTRAINT PK_ENTERPRISE_PACKAGE_STATUS PRIMARY KEY (EP_ID);
ALTER TABLE &1 .ENTERPRISE_PACKAGE_HISTORY ADD CONSTRAINT PK_ENTERPRISE_PACKAGE_HISTORY PRIMARY KEY (EP_ID, CHRONO1, CHRONO2);
ALTER TABLE &1 .ECCM_LOG ADD CONSTRAINT PK_ECCM_LOG  PRIMARY KEY (KEY1,KEY2,CHRONO1,CHRONO2,LOG_TYPE,SEQ);
ALTER TABLE &1 .ECCM_ACTIONLOG ADD CONSTRAINT PK_ECCM_ACTIONLOG PRIMARY KEY (KEY1,KEY2,CHRONO1,CHRONO2,LOG_TYPE,SEQ);
ALTER TABLE &1 .ENTERPRISE_PACKAGE_SUBPACKAGE ADD CONSTRAINT PK_ENTERPRISE_PKG_SUBPACKAGE PRIMARY KEY (SP_ID, EP_ID);
ALTER TABLE &1 .HARVEST_SUBPACKAGE_ACTIONS ADD CONSTRAINT PK_HARVEST_SUBPACKAGE_ACTIONS PRIMARY KEY (SP_ID, EP_ID);
ALTER TABLE &1 .WORKBENCH_PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (PRODUCT_CODE);
ALTER TABLE &1 .PROVIDER_USER ADD CONSTRAINT PK_PROVIDER_USER PRIMARY KEY (USERID);
ALTER TABLE &1 .SETTINGS ADD CONSTRAINT PK_SETTINGS PRIMARY KEY (ECCMUSERID, CONTEXT);
ALTER TABLE &1 .USER_PREFERENCES ADD CONSTRAINT PK_USER_PREFERENCES PRIMARY KEY (PREFERENCE_USERID, PREFERENCE_TYPE, PRODUCT_CODE);

REM ***
REM *** Create Index Statements
REM ***
CREATE UNIQUE INDEX NDX_ENT_PKG ON &1 .ENTERPRISE_PACKAGE (EP_NAME );
CREATE INDEX NDX_ENT_PACKAGE_STATUS ON &1 .ENTERPRISE_PACKAGE_STATUS (EP_ID, ECCM_CONFIGURATIONID);
CREATE UNIQUE INDEX NDX_SUB_PKG ON &1 .ENTERPRISE_PACKAGE_SUBPACKAGE (PRODUCT_CODE, PROVIDER_NAME ,PRODUCT_PACKAGEID,PRODUCT_PACKAGE_NAME );
CREATE UNIQUE INDEX NDX_PROV ON &1 .WORKBENCH_PROVIDER (PROVIDER_NAME, PRODUCT_CODE );
CREATE UNIQUE INDEX NDX_PROV_USER ON PROVIDER_USER (PROVIDER_NAME, PRODUCT_CODE, USERNAME, PROVIDER_NUMBER ); 
CREATE INDEX NDX_USER_PREF on &1 .USER_PREFERENCES (PREFERENCE_USERID, PRODUCT_CODE);

REM ***
REM *** Insert Data in Product and Counter Tables
REM ***
INSERT INTO &1 .WORKBENCH_PRODUCT VALUES (0, 'CMEW');
INSERT INTO &1 .WORKBENCH_PRODUCT VALUES (1, 'ENDEVOR');
INSERT INTO &1 .WORKBENCH_PRODUCT VALUES (2, 'HARVEST');
INSERT INTO &1 .COUNTER VALUES (1, 100, 5000, 1000, 1, 71, TO_DATE('2004-10-15 18:16:0', 'YYYY-MM-DD HH24:MI:SS'));

SPOOL OFF;
EXIT;

