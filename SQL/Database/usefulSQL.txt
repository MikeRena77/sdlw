ORACLE PL/SQL NEW_TIME function
The following new_time example converts an Atlantic Standard Time into a Mountain Standard Time:

    new_time (to_date ('2003/11/01 01:45', 'yyyy/mm/dd HH24:MI'), 'AST', 'MST')

This example would return '2003/10/31 10:45:00 PM'.

update harvest.harversions set creatorid = '12',creationtime = NEW_TIME(TO_DATE('8/11/06 11:53','MM/DD/YY HH24:MI'),'CDT','GMT'),modifiedtime = NEW_TIME(TO_DATE('8/11/06 11:53','MM/DD/YY HH24:MI'),'CDT','GMT') where versionobjid = '13084';



project
SELECT "ENVOBJID", "ENVIRONMENTNAME", "ENVISACTIVE", "BASELINEVIEWID", "CREATIONTIME", "CREATORID", "MODIFIEDTIME", "MODIFIERID", "NOTE", "ISARCHIVE", "ARCHIVEBY", "ARCHIVEMACHINE", "ARCHIVEFILE", "ARCHIVETIME" FROM "HARVEST"."HARENVIRONMENT" 
baselineview
SELECT "VIEWOBJID", "VIEWNAME", "VIEWTYPE", "ENVOBJID", "CANVIEWEXTERNALLY", "BASELINEVIEWID", "CREATIONTIME", "CREATORID", "MODIFIEDTIME", "MODIFIERID", "SNAPSHOTTIME", "NOTE" FROM "HARVEST"."HARVIEW" 
repinview
SELECT "VIEWOBJID", "REPOSITOBJID", "READONLY", "REPFROMVIEWID" FROM "HARVEST"."HARREPINVIEW" 
repository
SELECT "REPOSITOBJID", "REPOSITNAME", "ROOTPATHID", "REPONLINE", "CREATIONTIME", "CREATORID", "MODIFIEDTIME", "MODIFIERID", "INITIALVIEWID", "HOSTNODE", "HOSTINSTANCE", "NOTE", "EXTENSIONOPTION", "COMPFILE", "NOTCOMPEXT", "MVSMAPPING" FROM "HARVEST"."HARREPOSITORY" 

insert into haruser  (usrobjid,username,realname,loggedin,encryptpsswd,creationtime,creatorid values change_user_id,change_user,change_user;
insert into cmewadmn.workbench_providers (hardev1,2,2006-05-19 15:08:47.0);

hardev1 2 2006-05-19 15:08:47.0 
HARDEV1 2 2006-09-19 15:04:00.0 
endevor 1 2006-09-19 19:22:28.0 
MAPROUTA 1 2006-09-25 16:06:18.0 
MAPROUTE 1 2006-09-25 16:09:11.0 




SELECT "ECCM_CONFIGURATIONID", "PROVIDER_NAME", "PRODUCT_CODE", "PROVIDER_NUMBER", "DATETIME_UPDATED" FROM "CMEWADMN"."ECCM_CONFIGURATION" 
1002 HARDEV1 2 1 2006-09-19 15:04:00.0 
1004 MAPROUTA 1 1 2006-09-25 16:06:18.0 
1005 MAPROUTE 1 1 2006-09-25 16:09:11.0 
1003 endevor 1 1 2006-09-19 19:22:28.0 
1001 hardev1 2 1 2006-05-19 15:08:47.0 


SELECT "ECCMUSERID", "USERID", "ECCM_CONFIGURATIONID", "DATETIME_UPDATED" FROM "CMEWADMN"."ECCM_USER" 
5001 101 1001 2006-05-19 15:08:47.0 
5002 102 1002 2006-09-19 15:04:00.0 
5003 103 1003 2006-09-19 19:22:28.0 
5004 104 1003 2006-09-20 13:22:56.0 
5005 105 1004 2006-09-25 16:06:18.0 
5006 106 1005 2006-09-25 16:09:11.0 
5007 107 1002 2006-10-02 19:51:11.0 
5008 108 1002 2006-10-23 19:43:18.0 

SELECT "USERID", "PROVIDER_NAME", "PRODUCT_CODE", "USERNAME", "PASSWORD", "DATETIME_UPDATED", "PROVIDER_NUMBER" FROM "CMEWADMN"."PROVIDER_USER" 
101 hardev1 2 harvest ,,2006-05-19 15:08:47.0,1
102 HARDEV1 2 harvest ,,2006-09-19 15:04:00.0,1 
103 endevor 1 Y268858 ,, 2006-09-19 19:22:28.0 1 
104 endevor 1 Y275883 ,, 2006-09-20 13:22:56.0 1 
105 MAPROUTA 1 Y275883 ,, 2006-09-25 16:06:18.0 1 
106 MAPROUTE 1 Y275883 ,, 2006-09-25 16:09:11.0 1 
107 HARDEV1 2 AndrewsMic ,, 2006-10-02 19:51:11.0 1 
108 HARDEV1 2 Student_01 ,, 2006-10-23 19:43:18.0 1 


SELECT "ECCMUSERID", "CONTEXT", "VALUE", "DATETIME_UPDATED" FROM "CMEWADMN"."SETTINGS" 
0 ENDDOFDENDEVOR K19=Y,K6=N,K11=N,K5=N,K26=A,K27=N,K3=N,K21=Y,K28=Y,K17=Y,K20=Y,K0=N,K12=Y,K18=Y,K8=Y,K1=Y,K22=Y,K2=N,K14=F,K30=N,K15=N,K10=N,K24=Y,K16=Y,K13=Y,K25=Y,K4=N,K9=Y,K29=N,K23=Y,K7=N 2006-11-03 18:36:04.0 
5003 ENDDOFDENDEVOR K19=Y,K6=N,K11=N,K5=N,K26=A,K27=N,K3=N,K21=Y,K28=Y,K17=Y,K20=Y,K0=N,K12=Y,K18=Y,K8=Y,K1=Y,K22=Y,K2=N,K14=F,K30=N,K15=N,K10=N,K24=Y,K16=Y,K13=Y,K25=Y,K4=N,K9=Y,K29=N,K23=Y,K7=N 2006-11-03 18:37:36.0 
5003 CHOME 
 2006-09-21 18:41:16.0 
5003 NELMSEARCH searchTab_wProGro=(),searchTab_wCcid=(),searchTab_sub=(ND700;*),searchTab_elm=(*),searchTab_env=(DEV),searchTab_elmThru=(),searchTab_type=(*;CBL;CB*),searchTab_sys=(ADMIN;ADM;FINAN),searchTab_stg=(D) 2006-09-21 20:09:06.0 
5004 ENDDOFDENDEVOR K19=Y,K6=N,K11=N,K5=N,K26=A,K27=N,K3=N,K21=Y,K17=Y,K28=Y,K20=Y,K0=N,K12=Y,K8=Y,K18=Y,K1=Y,K2=N,K22=Y,K14=F,K30=N,K15=N,K10=N,K24=Y,K16=Y,K13=Y,K25=Y,K4=N,K9=Y,K29=N,K23=Y,K7=N 2006-09-25 15:44:36.0 
5004 CHOME 
 2006-09-25 15:44:14.0 
5004 NELMSEARCH searchTab_wProGro=(),searchTab_wCcid=(;IATOOLS),searchTab_sub=(;ND700),searchTab_elm=(AAF*;aaf*;aaf0001c),searchTab_env=(VND;ADM),searchTab_elmThru=(),searchTab_type=(;CP#;ISR),searchTab_sys=(VISIO;ADMIN),searchTab_stg=(;N) 2006-09-25 15:44:32.0 
5004 NPKGCREATE creapac_beginDay=(20),creapac_beginYear=(2006),creapac_endYear=(2079),creapac_endHour=(00),creapac_endMon=(12),creapac_comment=(MOVE DEMO ELEMENT ),creapac_beginMon=(9),creapac_DST=(1),creapac_beginHour=(00),creapac_endMin=(00),creapac_endDay=(31),creapac_epkgId=(NOADMINDEMOPKG),creapac_beginMin=(00) 2006-09-20 14:09:23.0 
5004 NSCLSEARCH sSCLTab_elmThru=(),sSCLTab_wCcid=( ),sSCLTab_wProGro=(),sSCLTab_elm=(),sSCLTab_stg=(N),sSCLTab_sys=(ADMIN),sSCLTab_env=(ADM),sSCLTab_type=(DOC),sSCLTab_sub=(ND700) 2006-09-20 14:08:12.0 
5004 NSCLCHOICEV1 nSCLAc_opt_signoutToUser=(),nSCLAc_opt_ccid=(IATOOLS),nSCLAc_opt_comment=(MOVE DEMO ELEMENT) 2006-09-20 14:09:03.0 
5004 EPKGPROC 
 2006-09-20 14:09:56.0 
5004 NPKGSEARCH pkgSearch_keyW=(*;no*) 2006-09-20 14:29:25.0 
5003 NELMEXEC 
 2006-09-21 16:43:51.0 
5003 CEDITPROJ ProjSrch_theEnv=(DEV),ProjSrch_theSub=(*),ProjSrch_theSys=(ADMIN) 2006-09-21 16:37:16.0 
5003 ESTATESLIST ProjInfo_theType=(*),ProjInfo_theElm=(*) 2006-09-21 20:27:19.0 
5003 NELMCHOICEV1 ndvrAction_opt_toFile=(;test),ndvrAction_opt_toDsn=(),ndvrAction_opt_comment=(t),ndvrAction_opt_toName=(),ndvrAction_opt_procGrp=(),ndvrAction_opt_toDir=(C:\cmew),ndvrAction_opt_toMbr=(),ndvrAction_opt_level=(),ndvrAction_opt_toPath=(),ndvrAction_opt_version=(),ndvrAction_opt_ccid=(KHILL),ndvrAction_opt_toEncode=() 2006-09-21 20:23:47.0 
5003 EVIEWACTIONLOGMSGS 
 2006-09-21 16:54:33.0 
5003 HELPER 
 2006-09-21 17:03:32.0 
5003 NELMSEARCHV1 
 2006-09-21 20:27:21.0 
5003 NELMDODOWNLOAD 
 2006-09-21 20:24:17.0 
5003 NELMMGR 
 2006-09-21 18:52:37.0 
5004 NELMSEARCHV1 
 2006-09-25 15:44:36.0 
5004 NELMCHOICEV1 ndvrAction_opt_toFile=(aaf0001c;ldaloads.isr),ndvrAction_opt_toDsn=(),ndvrAction_opt_comment=(retieve for ew test;retieve for test),ndvrAction_opt_toName=(),ndvrAction_opt_toDir=(C:\),ndvrAction_opt_toMbr=(),ndvrAction_opt_level=(),ndvrAction_opt_toPath=(),ndvrAction_opt_version=(),ndvrAction_opt_ccid=(VIVENDLOAD;IATOOLS),ndvrAction_opt_toEncode=() 2006-09-25 15:38:26.0 
5004 NELMEXEC 
 2006-09-25 15:35:51.0 
0 ENDDOFDMAPROUTA K19=Y,K6=N,K11=N,K5=N,K26=A,K27=N,K3=N,K21=Y,K28=Y,K17=Y,K20=Y,K0=N,K12=Y,K8=Y,K18=Y,K1=Y,K2=N,K22=Y,K14=F,K30=N,K15=N,K10=N,K16=Y,K24=Y,K13=Y,K25=Y,K4=N,K9=Y,K29=N,K23=Y,K7=N 2006-09-25 16:06:27.0 


 
SELECT "PREFERENCE_USERID", "PREFERENCE_TYPE", "PRODUCT_CODE", "PREFERENCE_VALUE", "DATETIME_UPDATED" FROM "CMEWADMN"."USER_PREFERENCES" 
103 0 1 DEV:ADMIN:ND700 2006-09-21 16:37:31.0 
107 0 2 74 2006-12-14 16:27:52.0 
107 1 2 79 2006-12-14 16:27:52.0 
 
 

 
 
 

 


SELECT versionobjid 
FROM 
harpathfullname T,haritems I,harversions V,harenvironment E,harversionview W,harstate S 
WHERE 
E.environmentname = 'xDevelopment' and 
T.pathfullname = 'xDev\wsHRFacade\' and 
I.itemname = 'Global.asax.cs' and 
V.mappedversion = '0' and 
S.envobjid = E.envobjid and 
S.viewobjid = W.viewobjid and
W.versionobjid = V.versionobjid and
I.itemobjid = V.itemobjid and 
T.itemobjid = I.itemobjid 








CREATE SMALLFILE TABLESPACE "DBO" DATAFILE 'C:\HARVESTTABLES\DBO.ORA' SIZE 8M REUSE AUTOEXTEND ON NEXT 8K MAXSIZE 32767M LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT MANUAL 
BEGIN DBMS_SERVER_ALERT.SET_THRESHOLD(9000,NULL,NULL,NULL,NULL,1,1,NULL,5,'DBO'); END;
CREATE TABLE "CMEWADMN"."COUNTER" ( "ID" NUMBER(38), "USERID" NUMBER(38), "ECCM_USERID" NUMBER(38), "ECCM_CONFIGURATIONID" NUMBER(38), "EP_ID" NUMBER(38), "EWDB_ID" NUMBER(38), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_COUNTER" PRIMARY KEY ("ID") VALIDATE , CHECK ("ID" IS NOT NULL) VALIDATE , CHECK ("USERID" IS NOT NULL) VALIDATE , CHECK ("ECCM_USERID" IS NOT NULL) VALIDATE , CHECK ("ECCM_CONFIGURATIONID" IS NOT NULL) VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("EWDB_ID" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ECCM_ACTIONLOG" ( "KEY1" NUMBER(38), "KEY2" NUMBER(38), "CHRONO1" NUMBER(38), "CHRONO2" NUMBER(38), "LOG_TYPE" NUMBER, "SEQ" NUMBER, "LOG_TEXT" RAW(1900), CONSTRAINT "PK_ECCM_ACTIONLOG" PRIMARY KEY ("KEY1", "KEY2", "CHRONO1", "CHRONO2", "LOG_TYPE", "SEQ") VALIDATE , CHECK ("KEY1" IS NOT NULL) VALIDATE , CHECK ("KEY2" IS NOT NULL) VALIDATE , CHECK ("CHRONO1" IS NOT NULL) VALIDATE , CHECK ("CHRONO2" IS NOT NULL) VALIDATE , CHECK ("LOG_TYPE" IS NOT NULL) VALIDATE , CHECK ("SEQ" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ECCM_CONFIGURATION" ( "ECCM_CONFIGURATIONID" NUMBER(38), "PROVIDER_NAME" VARCHAR2(20), "PRODUCT_CODE" NUMBER(38), "PROVIDER_NUMBER" NUMBER(38), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_ECCM_CONFIGURATION" PRIMARY KEY ("ECCM_CONFIGURATIONID", "PROVIDER_NAME", "PRODUCT_CODE") VALIDATE , CHECK ("ECCM_CONFIGURATIONID" IS NOT NULL) VALIDATE , CHECK ("PROVIDER_NAME" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("PROVIDER_NUMBER" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ECCM_LOG" ( "KEY1" NUMBER(38), "KEY2" NUMBER(38), "CHRONO1" NUMBER(38), "CHRONO2" NUMBER(38), "LOG_TYPE" NUMBER, "SEQ" NUMBER, "LOG_DATETIME" DATE, "SEVERITY_LEVEL" NUMBER(38), "LOG_TEXT" RAW(133), "ACTIONLOG_URL" VARCHAR2(100), CONSTRAINT "PK_ECCM_LOG" PRIMARY KEY ("KEY1", "KEY2", "CHRONO1", "CHRONO2", "LOG_TYPE", "SEQ") VALIDATE , CHECK ("KEY1" IS NOT NULL) VALIDATE , CHECK ("KEY2" IS NOT NULL) VALIDATE , CHECK ("CHRONO1" IS NOT NULL) VALIDATE , CHECK ("CHRONO2" IS NOT NULL) VALIDATE , CHECK ("LOG_TYPE" IS NOT NULL) VALIDATE , CHECK ("SEQ" IS NOT NULL) VALIDATE , CHECK ("LOG_DATETIME" IS NOT NULL) VALIDATE , CHECK ("SEVERITY_LEVEL" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ECCM_USER" ( "ECCMUSERID" NUMBER(38), "USERID" NUMBER(38), "ECCM_CONFIGURATIONID" NUMBER(38), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_ECCM_USER" PRIMARY KEY ("ECCMUSERID", "USERID") VALIDATE , CHECK ("ECCMUSERID" IS NOT NULL) VALIDATE , CHECK ("USERID" IS NOT NULL) VALIDATE , CHECK ("ECCM_CONFIGURATIONID" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ENTERPRISE_PACKAGE" ( "EP_ID" NUMBER(38), "EP_NAME" VARCHAR2(40), "ECCM_CONFIGURATIONID" NUMBER(38), "SUBMITTING_ECCMUSERID" NUMBER(38), "EP_LASTACTION" NUMBER(38), "EP_EXECUTIONSTATE" NUMBER(38), "EP_EXECUTIONSTATUS" NUMBER(38), "COMMENTS" VARCHAR2(80), "EP_EXECUTIONWINDOWBEGIN" DATE, "EP_EXECUTIONWINDOWEND" DATE, "EP_EXECUTIONSTART" DATE, "EP_EXECUTIONFINISH" DATE, "DATETIME_UPDATED" DATE, "CHRONO1" NUMBER(38), "CHRONO2" NUMBER(38), "EP_EXEC_NOTIFICATION" NUMBER(38) DEFAULT 0 , CONSTRAINT "PK_ENTERPRISE_PACKAGE" PRIMARY KEY ("EP_ID") VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("EP_NAME" IS NOT NULL) VALIDATE , CHECK ("ECCM_CONFIGURATIONID" IS NOT NULL) VALIDATE , CHECK ("SUBMITTING_ECCMUSERID" IS NOT NULL) VALIDATE , CHECK ("EP_LASTACTION" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONSTATE" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONSTATUS" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONWINDOWBEGIN" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONWINDOWEND" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONSTART" IS NOT NULL) VALIDATE , CHECK ("EP_EXECUTIONFINISH" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE , CHECK ("CHRONO1" IS NOT NULL) VALIDATE , CHECK ("CHRONO2" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ENTERPRISE_PACKAGE_HISTORY" ( "EP_ID" NUMBER(38), "CHRONO1" NUMBER(38), "CHRONO2" NUMBER(38), "ACTION_DATETIME" DATE, "ACTION" NUMBER(38), "ENTERPRISE_PACKAGE_NAME" VARCHAR2(40), "PRODUCT_NAME" VARCHAR2(60), "PROVIDER_NAME" VARCHAR2(20), "USERNAMES" VARCHAR2(40), "PRODUCT_PACKAGE_NAME" VARCHAR2(128), "ECCM_CONFIGURATIONID" NUMBER(38), CONSTRAINT "PK_ENTERPRISE_PACKAGE_HISTORY" PRIMARY KEY ("EP_ID", "CHRONO1", "CHRONO2") VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("CHRONO1" IS NOT NULL) VALIDATE , CHECK ("CHRONO2" IS NOT NULL) VALIDATE , CHECK ("ACTION_DATETIME" IS NOT NULL) VALIDATE , CHECK ("ACTION" IS NOT NULL) VALIDATE , CHECK ("USERNAMES" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ENTERPRISE_PACKAGE_STATUS" ( "EP_ID" NUMBER(38), "ECCM_CONFIGURATIONID" NUMBER(38), "EP_PKGSTATUS" NUMBER(38), CONSTRAINT "PK_ENTERPRISE_PACKAGE_STATUS" PRIMARY KEY ("EP_ID") VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("ECCM_CONFIGURATIONID" IS NOT NULL) VALIDATE , CHECK ("EP_PKGSTATUS" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."ENTERPRISE_PACKAGE_SUBPACKAGE" ( "SP_ID" NUMBER(38), "EP_ID" NUMBER(38), "PRODUCT_CODE" NUMBER(38), "PROVIDER_NAME" VARCHAR2(20), "PRODUCT_PACKAGEID" NUMBER(38), "PRODUCT_PACKAGE_NAME" VARCHAR2(128), "SP_PRIORITY" NUMBER(38), "SP_LASTACTION" NUMBER(38), "SP_EXECUTIONSTATE" NUMBER(38), "SP_EXECUTIONSTATUS" NUMBER(38), "COMMENTS" VARCHAR2(80), "SP_EXECUTIONSTART" DATE, "SP_EXECUTIONFINISH" DATE, "DATETIME_UPDATED" DATE, CONSTRAINT "PK_ENTERPRISE_PKG_SUBPACKAGE" PRIMARY KEY ("SP_ID", "EP_ID") VALIDATE , CHECK ("SP_ID" IS NOT NULL) VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_PACKAGEID" IS NOT NULL) VALIDATE , CHECK ("SP_PRIORITY" IS NOT NULL) VALIDATE , CHECK ("SP_LASTACTION" IS NOT NULL) VALIDATE , CHECK ("SP_EXECUTIONSTATE" IS NOT NULL) VALIDATE , CHECK ("SP_EXECUTIONSTATUS" IS NOT NULL) VALIDATE , CHECK ("SP_EXECUTIONSTART" IS NOT NULL) VALIDATE , CHECK ("SP_EXECUTIONFINISH" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."HARVEST_SUBPACKAGE_ACTIONS" ( "SP_ID" NUMBER(38), "EP_ID" NUMBER(38), "HARVEST_STATE" NUMBER(38), "PROMOTE_PROCESSID" NUMBER(38), "PROMOTE_PROCESSNAME" VARCHAR2(60), "DEMOTE_PROCESSID" NUMBER(38), "DEMOTE_PROCESSNAME" VARCHAR2(60), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_HARVEST_SUBPACKAGE_ACTIONS" PRIMARY KEY ("SP_ID", "EP_ID") VALIDATE , CHECK ("SP_ID" IS NOT NULL) VALIDATE , CHECK ("EP_ID" IS NOT NULL) VALIDATE , CHECK ("HARVEST_STATE" IS NOT NULL) VALIDATE , CHECK ("PROMOTE_PROCESSID" IS NOT NULL) VALIDATE , CHECK ("DEMOTE_PROCESSID" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."PROVIDER_USER" ( "USERID" NUMBER(38), "PROVIDER_NAME" VARCHAR2(20), "PRODUCT_CODE" NUMBER(38), "USERNAME" VARCHAR2(40), "PASSWORD" VARCHAR2(64), "DATETIME_UPDATED" DATE, "PROVIDER_NUMBER" NUMBER(38), CONSTRAINT "PK_PROVIDER_USER" PRIMARY KEY ("USERID") VALIDATE , CHECK ("USERID" IS NOT NULL) VALIDATE , CHECK ("PROVIDER_NAME" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("USERNAME" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE , CHECK ("PROVIDER_NUMBER" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."SETTINGS" ( "ECCMUSERID" NUMBER(38), "CONTEXT" VARCHAR2(20), "VALUE" VARCHAR2(2000), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_SETTINGS" PRIMARY KEY ("ECCMUSERID", "CONTEXT") VALIDATE , CHECK ("ECCMUSERID" IS NOT NULL) VALIDATE , CHECK ("CONTEXT" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."USER_PREFERENCES" ( "PREFERENCE_USERID" NUMBER(38), "PREFERENCE_TYPE" NUMBER(38), "PRODUCT_CODE" NUMBER(38), "PREFERENCE_VALUE" VARCHAR2(60), "DATETIME_UPDATED" DATE, CONSTRAINT "PK_USER_PREFERENCES" PRIMARY KEY ("PREFERENCE_USERID", "PREFERENCE_TYPE", "PRODUCT_CODE") VALIDATE , CHECK ("PREFERENCE_USERID" IS NOT NULL) VALIDATE , CHECK ("PREFERENCE_TYPE" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("PREFERENCE_VALUE" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."WORKBENCH_PRODUCT" ( "PRODUCT_CODE" NUMBER(38), "PRODUCT_NAME" VARCHAR2(60), CONSTRAINT "PK_PRODUCT" PRIMARY KEY ("PRODUCT_CODE") VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_NAME" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING 
CREATE TABLE "CMEWADMN"."WORKBENCH_PROVIDER" ( "PROVIDER_NAME" VARCHAR2(20), "PRODUCT_CODE" NUMBER(38), "DATETIME_UPDATED" DATE, CHECK ("PROVIDER_NAME" IS NOT NULL) VALIDATE , CHECK ("PRODUCT_CODE" IS NOT NULL) VALIDATE , CHECK ("DATETIME_UPDATED" IS NOT NULL) VALIDATE ) TABLESPACE "DBO" PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 STORAGE ( INITIAL 64K FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) LOGGING

SQL> select repositname, fileextension from harfileextension, harrepository wher
e harfileextension.repositobjid=harrepository.repositobjid order by repositname;

 SELECT 	B."ITEMOBJID", 
	I."ITEMNAME",
	B."BRANCHOBJID", 
	B."PACKAGEOBJID", 
	P."PACKAGENAME",
	B."ISMERGED",
                E."ENVIRONMENTNAME",
                S."STATENAME",
                C."MERGEDPKGSONLY"
FROM 	"HARVEST"."HARBRANCH" B,
	"HARVEST"."HARITEMS" I,
	"HARVEST"."HARPACKAGE" P,
	"HARVEST"."HARENVIRONMENT" E,
	"HARVEST"."HARSTATE" S,
                "HARVEST"."HARPROMOTEPROC" C
WHERE 
	B."ITEMOBJID"=I."ITEMOBJID" AND
	B."PACKAGEOBJID"=P."PACKAGEOBJID" AND
	P."ENVOBJID"=E."ENVOBJID" AND
	P."STATEOBJID"=S."STATEOBJID" AND
                S."STATEOBJID"=C."STATEOBJID"
ORDER BY "ITEMOBJID", "PACKAGEOBJID", "BRANCHOBJID";


SELECT 	B."ITEMOBJID", 
	I."ITEMNAME",
	B."BRANCHOBJID", 
	B."PACKAGEOBJID", 
	P."PACKAGENAME",
	B."ISMERGED",
                E."ENVIRONMENTNAME",
                S."STATENAME"
FROM 	"HARVEST"."HARBRANCH" B,
	"HARVEST"."HARITEMS" I,
	"HARVEST"."HARPACKAGE" P,
	"HARVEST"."HARENVIRONMENT" E,
	"HARVEST"."HARSTATE" S
WHERE 
	B."ITEMOBJID"=I."ITEMOBJID" AND
	B."PACKAGEOBJID"=P."PACKAGEOBJID" AND
	P."ENVOBJID"=E."ENVOBJID" AND
	P."STATEOBJID"=S."STATEOBJID"
ORDER BY "ITEMOBJID", "PACKAGEOBJID", "BRANCHOBJID";

SELECT 	B."ITEMOBJID", 
	I."ITEMNAME",
	B."BRANCHOBJID", 
	B."PACKAGEOBJID", 
	P."PACKAGENAME",
	B."ISMERGED" 
FROM 	"HARVEST"."HARBRANCH" B,
	"HARVEST"."HARITEMS" I,
	"HARVEST"."HARPACKAGE" P
WHERE 
	B."ITEMOBJID"=I."ITEMOBJID" AND
	B."PACKAGEOBJID"=P."PACKAGEOBJID"
ORDER BY "ITEMOBJID", "PACKAGEOBJID", "BRANCHOBJID";


SQL used to recreate Oracle sequences for HARVEST DB on HARDEV1
CREATE SEQUENCE "HARVEST"."HARENVIRONMENTSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 280;
CREATE SEQUENCE "HARVEST"."HARFORMATTACHMENTSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE "HARVEST"."HARFORMSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 550;
CREATE SEQUENCE "HARVEST"."HARITEMSSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 44000;
CREATE SEQUENCE "HARVEST"."HARPACKAGEGROUPSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 70;
CREATE SEQUENCE "HARVEST"."HARPACKAGESEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 540;
CREATE SEQUENCE "HARVEST"."HARPROCESSSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 8050;
CREATE SEQUENCE "HARVEST"."HARREPOSITORYSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 100;
CREATE SEQUENCE "HARVEST"."HARSTATESEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 1100;
CREATE SEQUENCE "HARVEST"."HARUSERGROUPSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 50;
CREATE SEQUENCE "HARVEST"."HARUSERSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 240;
CREATE SEQUENCE "HARVEST"."HARVERSIONDATASEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 43000;
CREATE SEQUENCE "HARVEST"."HARVERSIONSSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 54000;
CREATE SEQUENCE "HARVEST"."HARVIEWSEQ" NOCYCLE NOORDER CACHE 5 NOMAXVALUE MINVALUE 1 INCREMENT BY 1 START WITH 1107;
